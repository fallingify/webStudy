웹개발4 12일차
Vuejs 5일차

비동기처리 -> 전개연산자 -> 프록시 -> vuejs프레임워크 -> 기본디렉티브

1. 비동기처리
1) 동기(synchronous)
	동기적인 코드는 순차적으로 실행함
	동기 코드에서는 코드가 실행되는 순서가 중요함
	ex) 함수호출
	
2) 비동기(asynchronous)
	순차적으로 실행되지 않음. 작업이 완료되는 것을 기다리지 않고 다른 작업을 동시에 
	수행됨
	비동기 코드애서는 코드의 실행이 순서에 의존하지 않음
	ex) 특정 이벤트가 발생할 때나 완료될때까지 기다리지 않고 다음 코드를 실행하는 것
	
3) 자바스크립트 비동기처리
	특정 코드의 연산이 끝날 때까지 코드의 실행을 멈추지 않고
	다음 코드를 먼저 실행하는 자바스크립트의 특성을 의미
	네트워크 요청, 파일읽기/쓰기, 타이머함수, 이벤트처리 등에서 사용됨

(1) 콜백함수
(2) promise
(3) async await
	콜백함수와 프로미스의 단점을 보완하여 가독성을 높임
	함수 선언 앞부분에 async키워드를 붙여서 비동기함수로 만듦
	이때 함수는 항상 프로미스를 반환하게 됨
	await는 async 함수 안에서 동작하고 마치 동기식처럼 프로미스의 처리가 끝날때
	까지 기다림
	
Async 예외처리
	async함수 내부에 프로미스 예외가 발생하면 throw를 반환한다
	try~catch를 사용하여 프로미스가 거부될 때 해당 예외에 대한 추가 로직
	이나 오류 메시지를 출력할 수 있다


	async function 함수명(){
	try{
		await 실행함수;
	} catch(e) {
		예외처리 실행; 
	}};


+) 동기와 비동기 면접질문
1. 동기란 무엇인가?
	작업이 순차적으로 실행되는 것(한 작업이 완료되기 전에 다음작업은 시작되지 않음)
2. 바동기란 무엇인가?
	작업이 순차적으로 진행되지 않고 병렬적으로 실행되는 것(한 작업이 완료되기를
	기다리지 않고 다음 작업을 시작할 수 있음)
3. 동기와 비동기의 차이는 무엇인가?
	동기는 작업이 순차적으로 실행되면서 결과를 기다린 후 다 끝나면 다음작업이 수행되고
	비동기는 작업이 병렬적으로 실행되며 결과를 기다리지 않고 다음 작업을 수행할 수 있음
4. 동기와 비동기를 사용하는 경우는 어떤 것들이 있는가?
   동기는 작업의 순서가 중요하고 다음작업이 기다려야하는 경우 사용됨
   (ex : 파일 읽은 후 처리해야하는 경우)
   비동기는 작업의 순서가 중요하지 않거나 작업이 오랜시간이 걸리거나 외부 리소스에
   의존하는 경우 사용됨
   (ex : 파일 다운로드, 네트워크 요청 등)
5. 비동기 작업을 처리하는 방법에는 어떤게 있는가?
   콜백함수, Promise, async/await
   콜백함수는 비동기 작업이 완료되면 호출하는 함수를 지정하는 방법
   Promise는 비동기 작업의 성공, 실패를 나타내는 객체
   async/await는 Promise를 기반으로 한 동기적인 방법


2. 전개연산자
	함수의 매개변수 ... 연산자를 사용하면 "가변파라미터(rest parameter)
	개별 값을 나열하여 함수의 매개변수로 전달하면 함수내부에서 배열로 사용함
	
	...전개연산자(spread operator)
	배열이나 객체를 ...연산자와 함께 객체 리터럴, 배열리터럴에서 사용하면
	객체, 배열 내의 값을 분해한 값으로 전달햠


3. 프록시 (proxy)
	객체의 속성을 읽어오거나 설정하는 작업을 intercept위해 랩핑하게 하는 객체
	객체의 속성에 접근할 때 내가 원하는 지정된 작업ㅇ르 수행하도록 할 수 있음

	MVVM 아키텍처는 Model의 데이터가 update되면 viewModel에게 알림 전송을
	수행하는 부분을 볼 수 있음
	
	Vue3에서는 Model 내부의 객체 속성이 변경 시 알림전송을 수행하기 위해 proxy를
	이용함

	
4. vue.js 프레임워크
	vuejs는 html과 자바스크립트를 조합하여 웹 어플리케이션을 만들기 때문에 
	각각의 역할을 분리하여 코드를 구성할 수 있다
	vue인스턴스에 데이터를 바인딩하고 html요소에 v-접두사를 갖는 디렉티브를 속성
	으로 추가하여 DOM요소와 데이터를 연결함
	
	데이터바인딩(data binding)	 : vue 인스턴스의 데이터를 html요소에 연결하는 것을 의미
	디렉티브(directive) : html요소에 특정한 동작을 적용할 때 사용하는 vue.js표기법
	선언적렌더링 : vue는 템플릿 구문 {{데이터}} 를 활용하여 데이터를 선언적으로 출력(렌더링)함
	반응성 : vue는 javascript의 상태 변경을 자동으로 추적하고 변경발생시 DOM을 효율적으로 
	업데이트하


	MVVM패턴
	view : UI를 표현
	view model : 데이터와 비즈니스 로직을 담당
		뷰에 대한 상태와 동작을 정의하고 모델과의 데이터 바인딩처리
		사용자 입력에 대한 이벤트 처리와 명령을 실행
		"상태와 연산"
	model: 도메인 특화 데이터
		뷰 모델에서 모델로 업데이트 
		모델에서 뷰로 알림전송
5. 기본 디렉티브 
	디렉티브(directive) : v- 접두사로 가지는 특수 속성을 의미
	
1) v-text, v-html 다렉티브
	템플릿에서 출력하는 방법을 제어할 때 사용된다
	v-text 디렉티브 : 해당 엘리먼트의 텍스트 콘텐츠를 vue인스턴스의 데이터와 연결함
			html말고 일반텍스트로 데이터를 출력함
	v-html 디렉티브 : 해당 엘리먼트의 html컨텐츠를 vue인스턴스의 데이터와 연결함
			vue데이터에 저장된 html을 해석하여 렌더링할 수 있음
			주의 : 사용자의 입력을 받거나 외부에서 html을 동적으로 가져올때
			보안문제가 발생할 수 있음
	
		




















	