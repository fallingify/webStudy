day10
조인(join) -> 형변환 함수

JOIN
	두 개 이상의 테이블을 연결하여 데이터를 검색하는 방법
	여러 테이블에 흩어져 있는 정보 중 사용자가 필요한 정보만 가져와서 가상의 테이블처럼 만들고
	결과를 보여주는 것

	ON절을 사용하여 조건을 걸어준다

JOIN을 사용하는 이유
	정규화를 통해 조회 테이블이 너무 많이 쪼개져 있으면 작업이 불편하기 때문에
	입력, 수정, 삭제의 성능을 향상시키기 위해서 JOIN을 통해 합친 후 사용한다

조인의 종류
	내부조인 : 공통으로 존재하는 컬럼의 값이 같은 경우를 추출하는 기법
	외부조인 : 왼쪽 외부조인 : 왼쪽 테이블의 모든 데이터와 오른쪽 테이블의 동일한 데이터를 추출하는 기법
		오른쪽 외부조인 : 오른쪽 테이블의 모든 데이터와 왼쪽 테이블의 동일한 데이터를 추출하는 기법
		완전 외부조인 : 양쪽의 모든 데이터를 추출하는 기법
	교차조인 : 조인조건이 없는 모든 데이터 조합을 추출하는 기법
	셀프조인 : 자기 자신에게 별칭을 지정한 후 다시 조인하는 기법

1) 내부조인(INNER JOIN)
	조건이 정확히 일치하는 값만 합쳐서 조회

	SELECT A.컬럼명1, A.컬럼명2, B.컬럼명1, B.컬럼명2
	FROM 테이블명1 A [INNER] JOIN 테이블명2 B
		ON [조인조건] -- A.컬럼명 = B.컬럼명
	[WHERE 검색조건];

두 테이블에 관계가 있을 때에 따라서 등가조인과 비등가 조인으로 나뉜다
- 등가조인
	ON절에 등호(=)가 있을 때
	두 테이블간에 관계가 있다면 (FK가 존재한다면) 부모 테이블의 PK와 자식 테이블의 FK를
	등호로 비교가 가능하기 때문에 등가조인 사용이 가능하다

- 비등가 조인
	ON절에 등호(=)가 없을 때

SQL실행순서
	FROM > ON > JOIN > WHERE > GROUP BY > HAVING > SELECT >ORDER BY

	FROM : 데이터를 가져올 테이블 지정
	ON : JOIN 연산시 조인 조건을 설정
	JOIN : 테이블 병합
	WHERE : 조건에 맞는 행을 필터링
	GROUP BY : 그룹화 조건 설정
	HAVING : 그룹화된 결과에 대한 조건 설정
	SELECT : 가져올 열을 선택
	ORDER BY : 결과를 정렬

	=> ON 절의 조건은 JOIN 되면서 실행되고, WHERE절의 조건은 JOIN이 모두 끝나고 나서 실행된다
	=> ON과 WHERE를 같이 사용할 때와 ON만 사용할 때의 결과가 같다면 ON만 사용하는 것이 좋다

2) 외부조인(OUTER JOIN)
	외부조인은 내부조인과 다르게 한쪽에만 값이 있어도 테이블을 합쳐서 보여준다

- 왼쪽 외부 조인
	SELECT A.컬럼1, A.컬럼2, B.컬럼1, B.컬럼2
	FROM 테이블1 A LEFT [OUTER] JOIN 테이블2 B
		ON 조인조건
	[WHERE 검색조건];

SELECT A.책번호, A.책제목, B.책번호, B.가격
FROM 도서 A LEFT JOIN 도서가격 B
	ON A.책번호 = B.책번호;

------------------------------------------
A.책번호 | A.책제목 | B.책번호 | B.가격|
------------------------------------------
111	DBMS1	111	20000
222	DBMS2	222	20000
333	자료구조	NULL	NULL
444	JAVA	NULL	NULL
------------------------------------------

- 오른쪽 외부 조인
	SELECT A.컬럼1, A.컬럼2, B.컬럼1, B.컬럼2
	FROM 테이블1 A RIGHT [OUTER] JOIN 테이블2 B
		ON 조인조건
	[WHERE 검색조건];

- 완전 외부 조인
	SELECT A.컬럼1, A.컬럼2, B.컬럼1, B.컬럼2
	FROM 테이블1 A FULL [OUTER] JOIN 테이블2 B
		ON 조인조건
	[WHERE 검색조건];

------------------------------------------
A.책번호 | A.책제목 | B.책번호 | B.가격|
------------------------------------------
111	DBMS1	111	20000
222	DBMS2	222	20000
333	자료구조	NULL	NULL
444	JAVA	NULL	NULL
NULL	NULL	555	29000
------------------------------------------


형변환 함수
	TO_CHAR() : CHAR형으로 변환
		날짜 형식 변경할 때 유용하다
		TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		- 형식 : YYYY-MM-DD , YYYYMMDD, YYYY/MM/DD, ....
		- YYYY : 년도, MM : 월, DD : 일
		- HH24 : 24시간, HH : 12시간, MI : 분, SS : 초

	TO_NUMBER() : NUMBER 형으로 변환
	TO_DATE() : DATE 형으로 변환












































