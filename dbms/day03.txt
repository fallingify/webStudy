day03
연산자 -> CRUD

1. 연산자
1) 연결연산자	
	a || b
2) 산술연산자
	+, -, *, /

3) 관계연산자
	a < b : a가 b보다 작다(미만)
	a > b : a가 b보다 크다(초과)
	a <= b : a가 b보다 작거나 같다(이하)
	a >= b : a가 b보다 크거나 같다(이상)
	a = b : a와 b가 같다
	a <> b, a != b : a와 b가 다르다(같지않다)
		sql에서는 <> 으로 작성하는 것이 표준이다

where절
	원하는 행을 조회하거나 연산처리 한다
	
	SELECT 컬럼명
	FROM 테이블명
	WHERE 조건;

SELECT FIRST_NAME 이름,		--3. 각 컬럼에 별칭을 붙여서 조회
	last_name 성,
	salary 봉급
FROM EMPLOYEES			--1. EMPLOYEES 테이블에서
WHERE 봉급 >= 10000  -- 오류발생	--2. 봉급을 찾아라(오류)
ORDER BY 봉급;			--4. 봉급 오름차순으로 정렬

4) SQL연산자
	BETWEEN a AND b	
		a이상 b이하인 조건	TRUE
	BETWEEN 숫자 a AND 숫자 b : 숫자 a이상, 숫자 b이하인 값이면 TRUE
	BETWEEN 날짜 a AND 날짜 b : 시작날짜 a부터 종료날짜 b까지 사이의 날짜이면 TRUE
	a와 b사이의 대소 관계 비교가 진행되기 때문에 BETWEEN 작은값 AND 큰값으로 사용해야한다
	날짜사용시 BETWEEN 예전날짜 AND 최신날짜 사용해야한다

	IN(a, b, c,...)
		a 혹은 b 혹은 c 혹은 ... 일 조건
		소괄호 안의 값 1개를 만족한다면 TRUE
	LIKE
		문자열의 패턴을 검색하기 위해 사용한다
		% : 어떤 문자를 포함한 모든 문자
		_ : 단일 문자(문자의 길이 지정)
		a% : a로 시작하는 모든 문자
		%a : a로 끝나는 모든 문자
		%a% : 중간에 a가 들어가는 모든 문자
	IS NULL / IS NOT NULL
		데이터의 NULL의 여부를 판단하기 위해 사용한다
		NULL : 데이터가 존재하지 않음을 나타내는 값
		IS NULL : 값이 NULL일 경우
		IS NOT NULL : 값이 NULL이 아닐경우
		
		숫자와 날짜 데이터를 NULL과 연산하면 결과는 NULL이다, 
		산술표현식은 항상 결과가 NULL로 평가된다
		
		UNKNOWN : 결과를 알 수 없음, 조회할 수 없음
		NULL값과 조건을 사용하거나 NULL값 결과와 함께 사용할 경우 UNKNOWN
		NULL과 비교 연산자를 사용하면 UNKNOWN 결과가 나온다(실제값이 NULL이어도 UNKNOWN으로 나옴)
		a = NULL : UNKNOWN
		a != NULL : UNKNOWN
		오라클은 길이가 0인 문자값을 NULL로 처리한다

	비교연산자 ANY(a, b, c, ...)	: a, b, c, 중 아무거나 만족하면(비교연산자와 함께 사용됨)
	비교연산자 ALL(a, b, c, ...)	: a, b, c를 전부 만족하면(비교연산자와 함께 사용됨)

5) 논리연산자
	피연산자 자리에 조건이 온다
	여러개의 조건을 연결할 때 사용한다
	a AND b 
		a조건 그리고 b조건을 만족하는 조건
		a와 b 둘 다 TRUE이면 TRUE
		
		- UNKNOWN과 TRUE : UNKNOWN
		- UNKNOWN과 FALSE : FALSE
		- UNKNOWN과 UNKNOWN : UNKNOWN

	a OR b
		a조건 또는 b조건을 만족하는 조건
		a와 b 둘 중 하나라도 TRUE이면 TRUE

		- UNKNOWN과 TRUE : TRUE
		- UNKNOWN과 FALSE : UNKNOWN
		- UNKNOWN과 UNKNOWN : UNKNOWN

	NOT a
		a조건을 만족하지 않는 조건
		TRUE는 FALSE, FALSE는 TRUE로

		- NOT UNKNOWN : UNKNOWN

6) 단항연산자
	양수 +
	음수 -

2. CRUD
	기본적인 데이터 처리 기능
	Create(생성), Read(읽기), Update(수정), Delete(삭제)의 약자이다

SQL문(쿼리문)의 종류
	SQL 명령어의 성격에 따라 분류한 것이다
	
1) DDL(Data Definition Language) : 데이터 정의 언어
	테이블 조작 또는 제어 관련 쿼리문
	
2) DML(Data Manipulation Language) : 데이터 조작 언어
	데이터를 조작하는 쿼리문
3) DCL(Data Control Language) : 데이터 제어 언어(권한)
4) TCL(Transaction Control Language) : 트랜잭션 제어 언어

3. DML : 데이터 조작 언어
1) SELECT : 조회
	SELECT 컬러명,
	FROM 테이블명
	[WHERE 조건식]
	[ORDER BY 정렬할 컬럼]

2) INSERT : 추가
	- 원하는 컬럼만 골라서 값을 저장할 때 사용하는 방법
	INSERT INTO 테이블명 ( 컬럼명, ..)
	VALUES (값,...);
	
	- 모든 컬럼에 값을 넣을 때 사용하는 방법
	INSERT INTO 테이블명
	VALUES (값, ...);
	
3) UPDATE : 수정
	UPDATE 테이블명
	SET 컬럼명1 = 값1, 컬럼명2 = 값2, ...
	[WHERE 조건식]
	- WHERE절을 생략하면 내가 선택한 컬럼의 모든 행에 값이 저장된다

4) DELETE : 삭제
	DELETE FROM 테이블명
	[WHERE 조건식]
	- WHERE절의 조건을 통해 해당 값을 삭제할 수 있다
	- WHERE절을 생략하면 모든 값이 삭제된다(주의!!!)


+ 과제
-- 학생 점수가 있는 테이블 만들기
CREATE TABLE WEB_STUDENT(
   STUDENT_NUMBER NUMBER,
   STUDENT_NAME VARCHAR2(100),
   STUDENT_MATH NUMBER,
   STUDENT_ENG NUMBER,
   STUDENT_KOR NUMBER,
   STUDENT_GRADE VARCHAR2(100)
);

SELECT * FROM WEB_STUDENT;

학생 테이블에 데이터 추가

1. 학생번호, 이름, 수학, 영어, 국어
	1, '김철수', 90, 90, 90
	2, '홍길동', 70, 25, 55
	3, '이유리', 89, 91, 77
	4, '김웅이', 48, 100, 92
	5, '신짱구', 22, 13, 9

2. 전체 학생의 이름과 평균 점수를 조회하기
3. 학생의 평균점수를 구하고 학점 수정하기
	A : 90점 이상
	B : 80점 이상~ 90점 미만
	C : 50점 이상~ 80점 미만
	F : 50점 미만
4. 학점이 잘 들어갔는지 전체 컬럼 조회하기
















