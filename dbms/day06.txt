day06
복습 -> 모델링 -> DML2 -> 정규화

0. 복습
데이터의 무결성
	데이터의 정확성, 일관성, 유효성을 유지하여 결함없는 데이터를 유지 및 사용하는 것

무결성의 종류
	개체 무결성
	참조 무결성
	도메인 무결성

모델링
	요구사항분석	: 테이블 구조
	개념적 설계(개념 모델링)	: 테이블 구조 정의
	논리적 설계(논리 모델링)	: 제약조건
	물리적 설계(물리 모델링)	: 테이블명, 컬럼명, type 지정
	구현			: sql 쿼리문


1) 요구사항 분석
	도서관에서 회원의 정보와 책의 정보가 필요하다
	회원 정보 : 회원번호, 이름, 나이, 핸드폰번호, 주소
	책의 정보 : 도서번호, 책이름, 장르
	단, 장르 인문학, IT, 추리, 경영만 있다
	한명의 회원은 여러권을 책을 대여할 수 있다
	테이블 명 : WEB_MEMBER, WEB_BOOK

	- 제약조건 : PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, CHECK

잘못된 요구사항 분석
	책(부모)	회원(자식) : 회원테이블이 자식이고 자식 테이블은 FK 존재한다
	도서번호	회원번호
	책이름	이름
	장르	나이
		핸드폰번호
		주소
		도서번호

맞는 요구사항 분석
	회원(부모) 책(자식) : 한명의 회원이 여러권의 책을 대여하는 관계 성립된다

2) 개념 모델링
	회원		책
	회원번호		도서번호
	이름		책이름
	나이		장르
	핸드폰번호
	주소
	
3) 논리 모델링 : 테이블간의 관계 설정, 제약조건 추가
	회원				책
	회원번호	PK			도서번호 PK
	이름				책이름	NOT NULL
	나이				장르	CHECK
	핸드폰번호 NOT NULL, UNIQUE	회원번호 FK
	주소	NOT NULL
		
4) 물리 모델링
	WEB_MEMBER
	--------------------------------
	MEMBER_NUMBER NUMBER : PRIMARY KEY
	MEMBER_NAME VARCHAR2(1000) : NOT NULL
	MEMBER_AGE NUMBER
	MEMBER_PHONE_NUMBER VARCHAR2(1000) : NOT NULL, UNIQUE
	MEMBER_ADDRESS VARCHAR2(1000) : NOT NULL
	
	WEB_BOOK
	--------------------------------
	BOOK_NUMBER NUMBER : PRIMARY KEY
	BOOK_NAME VARCHAR2(1000) : NOT NULL
	BOOK_CATEGORY VARCHAR2(1000) : CHECK('인문학', 'IT', '추리', '경영')
	MEMBER_NUMBER NUMBER : FOREIGN KEY

시퀀스(Sequence)
	오라클에서 중복되지 않는 값들을 자동으로 순차적으로 생성하는 것
	보통 PK값에 중복값을 방지하기 위해 사용한다

시퀀스 생성
	CREATE SEQUENCE 시퀀스명;
	옵션
	START WITH 시작숫자
	INCREMENT BY 증감숫자
	등등,.,
	일반적으로 별다른 옵션없이 사용해도 된다

시퀀스 삭제
	DROP SEQUENCE 시퀀스명;

시퀀스 사용
	시퀀스명.NEXTVAL

부모테이블의 데이터를 자식테이블에서 참조하고 있을 때 
	ON DELETE CASCADE의 옵션을 추가하면 부모 삭제시 
	참조중인 모든 자식 데이터가 자동으로 삭제된다

NULL
	정의되지 않은 값
	빈 값 대신 미정값을 부여할 때 사용
	PK는 불가능, FK 가능, UK 가능

NOT NULL 제약조건
	ALTER TABLE [테이블명] MODIFY [컬럼명] NOT NULL;

제약조건 삭제
	ALTER TABLE [테이블명] DROP CONSTRAINT [제약조건 이름];

조건식
	NULL은 =으로 비교를 할 수 없으며 IS를 사용해야한다
	컬럼명 IS NULL : 컬럼값이 NULL이면 참
	컬럼명 IS NOT NULL : 컬럼값이 NULL이 아니면 참

조회 시 NULL값을 다른 값으로 변경
	NVL(컬럼명, '값') : NULL값 대신 다른 값으로 변경 후 조회
	NVL2(컬럼명, 'NULL이 아닐때 값', 'NULL일 때 값') : NULL일 때 값, NULL이 아닐때의 값을 각각 설정

이상현상
	데이터베이스의 설계가 잘못되어 발생하는 문제

직원
==================================================
사원번호(PK) 	이름	생년월일		부서정보			급여
1		김	2010-12-31	영업부, 서울시..01234	200
2		이	2018-02-04	영업부, 서울시..01234	300
3		박	1992-04-27	사업부, 부산시..01234	400
4		서	1869-05-02	개발부, 경기도..01234	500
5		윤	2003-01-01	개발부, 경기도..01234

1. 삽입 이상
	- 새로운 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야하는 문제
	- 새로운 사원을 등록할 때 부서번호, 부서명, 주소, 우편번호를 같이 입력해야한다
2. 갱신이상
	- 중복 행 중에서 일부만 변경하여 데이터가 불일치하게 되는 모순적인 문제
	- 부서의 주소가 변경되었을 떄 해당하는 부서의 모든 사원 데이터를 수정해야한다
3. 삭제이상
	- 행을 삭제했을 떄 필요한 데이터도 같이 삭제되는 문제
	- 부서정보를 삭제할 때 사원의 정보도 같이 삭제하게 된다

정규화(Normalization)
	데이터의 중복을 최소화하고(독립성), 데이터의 무결성을 향상시키는 방법
	이상 현상을 제거하기 위한 작업
	6차 정규화까지 있으나 일반적으로 3차 정규화까지만 진행한다
	(과도한 정규화는 데이터를 조회할때 복잡해진다)
	반정규화(역정규화) : 데이터베이스의 성능 최적화 및 쿼리 실행속도를 빠르게 하기 위해
	데이터의 중복을 허용하는 것






















