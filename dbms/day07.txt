day07
복습 -> 모델링 -> 정규화

0. 복습
모델링
	현실세계 --- 모델링 ---> 모델(model)
		 단순화
		 명료화
		 추상화

1) 모델링은 단순화를 목적으로 한다
	복잡한 현실세계 현상을 이해하기 쉽게 요약해서 표현하는 기법
2) 모델링은 명료화를 목적으로 한다
	누구나 이해하기 쉽게 애매모호함을 제거하고 분명하고 또렷하게 표현하는 기법
3) 모델링은 추상화를 목적으로 한다
	이해하기 쉽게 설명하기 위해 중요한 특징을 찾아내어 구체적인 모양과 모습으로 형상화하는 기법

ex) 새 모델링
	새의 품종 : 참새, 비둘기, 앵무새, 독수리, 올빼미 등 ...

- 모델링 행위 : 모델링 대상의 엔티티(entity)
  모델링을 수행하는 주체(subject)

모델링 단계
	개념적 모델링		논리적 모델링		물리적 모델링
	엔티티(entity)		릴레이션(relation)		테이블(table)
	릴레이션(relation)		릴레이션(relation)		컬럼(column)
	속성(attribute)		속성, 컬럼 		행(row)
	주식별자(main identifier) 	기본키(primary key)		기본키(primary key)
	외래식별자(foreign identifier)	외래키(foreign key)		외래키(foreign key)
	인스턴스(instance)		튜플(tuple), 행(row)
	도메인(domain)		도메인(domain)		도메인(domain)

	상품	판매	회원
	품명	수량	성명
	가격		아이디
			주소
			핸드폰번호

	데이터 모델은 엔티티, 릴레이션, 속성으로 구성
	- 엔티티 : 다른 것들과 고유하게 구별될 수 있는것으로 독립적으로 존재할 수 있는 유무형의 정보단위
	- 릴레이션 : 엔티티와 엔티티 사이에 관련성을 표현하기 위한 유무형의 정보 단위
	- 속성 : 엔티티와 릴레이션의 특별한 성질을 표현하기 위한 정보 단위

시퀀스(Sequence)
	오라클에서 중복되지 않는 값을 자동으로 순차적으로 생성하는 것
	보통 PK값에 중복값을 방지하기 위해 사용한다

시퀀스 생성
	CREATE SEQUENCE 시퀀스명;

시퀀스 삭제
	DROP SEQUENCE 시퀀스명;

시퀀스 사용
	시퀀스명.NEXTVAL

NULL
	정의되지 않은 값
	빈 값 대신 미정값을 부여할 때 사용
	PK는 불가능, FK 가능, UK 가능

조건식
	NULL은 =으로 비교를 할 수 없으며 IS를 사용해야한다

조회 시 NULL값을 다른 값으로 변경
	NVL(컬럼명, '값') : NULL값 대신 다른 값으로 변경 후 조회
	NVL2(컬럼명, 'NULL이 아닐 때 값', 'NULL일 때 값') : NULL일 때의 값, NULL이 아닐 때의 값을 각각 설정
	
1. 정규화
데이터 베이스에 정규화가 필요한 이유
	데이터베이스를 잘 못 설계하면 불필요한 데이터 중복으로 인해 공간이 낭비된다
	이런 현상 이상(Anomaly)현상이라고 한다

	회원번호	이름	부서	프로젝트코드	급여	부서별인원수
	1111	홍길동	개발부	A0001		3000	4
	1111	홍길동 	개발부	B0003		2000	4
	1111	홍길동	개발부	C1234		4000	3
	2222	이유리	기획부	E0505		5000	2
	3333	신짱구	디자인부	G5555		4000	4

이상현상의 종류
- 삽입이상
	새로운 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야하는 문제
	ex) 프로젝트 코드가 Not Null설정, 신입사원이 추가되는 경우 프로젝트를 하지 않더라도 프로젝트 코드를
	따로 만들어서 삽입해야한다
- 갱신이상
	중복 행 중에서 일부만 변경하여 데이터가 불일치 하게 되는 모순적인 문제
	ex) 한 명의 사원은 반드시 하나의 부서에만 속할 수 있다
	만약 '홍길동'이 보안팀으로 부서를 옮길 시 3개행을 모두 갱신하지 않는다면 개발팀인지 보안팀인지 알 수 없다
- 삭제이상
	행을 삭제했을 떄 필요한 데이터도 같이 삭제되는 문제
	"신짱구"가 담당한 프로젝트가 드랍된다면 '신짱구'행을 모두 삭제하게된다
	프로젝트에서 드롭되면 정보를 모두 드롭하게 된다

이런 이상현상을 예방하고자 정규화를 진행한다
정규화를 진행하기 위해 각 컬럼간의 관련성을 파악한다
이 관련성을 함수적 종속성(Functional Depedency)라고 한다
따라서 하나의 테이블에서는 반드시 하나의 함수적 종속성만 존재하도록 정규화를 한다

함수적 종속
	y = 2x 라는 함수가 있을 때 x가 무엇이냐에 따라 y가 결정된다
	x를 결정자, y를 종속자라고한다

	x -> y

	x값이 1일 때 반드시 2가 나온다
	이렇게 x값에 대한 y값이 항상 하나인 경우를 함수 종속이라고 한다

	생일을 알면 나이가 나온다
	=> 나이 컬럼은 생일 컬럼에 함수 종속이다

	직원번호	이름	부서	프로젝트코드	급여	부서별인원수
	1111	홍길동	개발부	A0001		3000	4
	1111	홍길동 	개발부	B0003		2000	4
	1111	홍길동	개발부	C1234		4000	4
	2222	이유리	기획부	E0505		5000	2
	3333	신짱구	디자인부	G5555		4000	4

1차 정규화 : 각 열은 원자값을 갖도록 분해하여 중복을 제거
2차 정규화 : 부분적 종속만 제거하여 테이블 분리

	프로젝트 테이블
	직원번호	프로젝트코드	급여
	1111	A0001		3000
	1111	B0003		2000
	1111	C1234		4000
	2222	E0505		5000
	3333	G5555		4000

	직원 테이블
	직원번호	이름	부서		부서별 명수
	1111	홍길동	개발부		4
	2222	이유리	기획부		2
	3333	신짱구	디자인부		4

3차 정규화 : 이행적 함수를 제거하여 테이블 분해
	직원번호	프로젝트코드	급여
	1111	A0001		3000
	1111	B0003		2000
	1111	C1234		4000
	2222	E0505		5000
	3333	G5555		4000

	직원번호	이름	부서
	1111	홍길동	개발부		
	2222	이유리	기획부		
	3333	신짱구	디자인부
	
	부서	부서별 명수
	개발부	4
	기획부	2
	디자인부	4

정규화
	삽입/수정/삭제의 이상현상을 제거하기 위한 작업
	데이터의 중복을 최소화하는 목적이 있다
	6차 정규화까지 있지만 3차 정규화까지만 진행한다

1차 정규화(1NF- First Normal Form)
	목적 : 각 컬럼은 원자값을 갖도록 분해하여 중복을 제거한다
	반복되는 그룹을 별도의 테이블로 분리한다
	
	ex) 하나의 컬럼에 데이터가 연속적으로 들어가 있으면 1차 정규화가 필요하다
	상품명			
	'바지1', '바지2', '바지3'
	
	1차정규화 진행 => 조회 및 검사가 힘들다
	상품명1	상품명2	상품명3
	바지1	바지2	바지3

	1차정규화 진행
	상품명
	바지1
	바지2
	바지3	

2차 정규화(2NF - Second Normal Form)
	목적 : 부분적 종속을 제거하여 테이블을 분해한다
	기본키에 의존하지 않는 컬럼을 다른 테이블로 이동하여 테이블을 분리한다
	조합키(복합키)로 구성되었을 경우 조합키의 일부분에만 종속되는 속성이 있을 경우

	ex) 과자
	이름PK	맛PK	가격	제조사
	포카칩	오리지널	1600	오리온
	포카칩	양파맛	2000	오리온
	포테토칩	오리지널	1500	농심
	포테토칩	양파맛	2200	농심

	2차 정규화 진행
	과자
	이름PK 	맛PK	가격
	포카칩	오리지널	1600	
	포카칩	양파맛	2000	
	포테토칩	오리지널	1500	
	포테토칩	양파맛	2200	

	과자_제조사
	이름PK	제조사
	포카칩	오리온
	포테토칩	농심

3차 정규화(3NF)
	목적 : 이행적 함수를 제거하여 테이블을 분해한다
	비주요컬럼이 기본키가 아닌 컬럼에 종속되는 경우, 해당 컬럼들을 새로운 테이블로 분리하여 관계를 정리한다

	ex) 회원정보
	회원번호PK	이름	시	구	동 	우편번호
	1		김영선	서울시 	송파구	가락동	11111
	2		홍길동	부산시	부산구	부산동	22222
	3		이유리	서울시	강남구	역삼동	33333

	3차 정규화 => 우편번호가 시, 구, 동을 결정한다

	이행함수 종속
	X -> Y -> A
		B
		C
	X -> A 성립이 된다
	함수는 무조건 1대 1 대응이 되어야한다

	회원정보
	회원번호	이름	우편번호

	주소테이블
	우편번호	시	구	동

- 1차 정규화 : 모든 컬럼은 고유한 값을 가지고, 모든 행은 고유한 식별자(pk)를 가진다
- 2차 정규화 : 기본키가 조합키(복합키)인 경우 조합키의 일부분에만 종속되는 속성이 존재하는 경우,
	기본키가 아닌 컬럼에 종속되는 속성이 존재하는 경우(부분함수 종속성 제거)
- 3차 정규화 : 기본키가 아닌 컬럼이 다른 컬럼을 결정하는 경우(이행함수 종속성 제거)


학생 테이블(WEB_STUDENTS)
	STU_ID	STU_NAME STU_MAJOR STU_CODE	STU_SUBJECT
	001	홍길동	  컴공		CS101	데이터베이스
	002	홍길동	  컴공		CS202	알고리즘
	003	김철수	 경영학		BU103	경영 이론
	004	김짱구	 도시공학		CY105	도시공학이론





























