day02

DBMS
SQL문
	데이터베이스를 관리할 때 사용하는 명령어
	SQL문, 쿼리문, 질의문이라고 부른다

SQL문 주요 특징
	한 줄씩 실행되는 인터프리터 언어
	대문자와 소문자를 구분하지 않는다

일반적인 사용법
	예약어는 대문자로, 그외의 문자는 소문자로 작성한다
	여러줄에 걸쳐 작성한다
	들여쓰기를 활용한다

SELECT
	테이블에서 데이터를 조회할 때 사용하는 명령어
사용방법
	SELECT [DISTINCT] 컬럼명 [AS "별칭"], 컬럼명 [AS "별칭"], .. 
	FROM 테이블명
	[ORDER BY] 컬럼명 [ASC or DESC];

	- DISTINCT : 해당 컬럼의 중복 제외
	- AS 별칭(alias) : 해당 컬럼을 별칭으로 조회 한글 사용시 "별칭"
	- ORDER BY : 해당 컬럼을 기준으로 정렬
		- ASC(ascending) : 오름차순, 기본설정
		- DESC(descending) : 내림차순
		- 문자정렬 : 
		   - ASC  A, B, C,...  DESC C, B, A,...
		   - ASC 가, 나, 다,... DESC 다, 나, 가,..
		   - 알파벳 순서 : 대문자 < 소문자
		- 날짜정렬 : ASC 오래된 날짜부터 DESC 최근 날짜부터 정렬

주석	ctrl + /
	실행시키지 않고 설명을 작성할 때 사용한다

;(세미콜론)
	하나의 명령이 끝나면 작성한다
	세미콜론을 적어야 한 줄의 끝이라고 생각하기 때문에 세미콜론 이전에 줄바꿈을 해도 상관없다

데이터 타입(자료형)
1. 문자데이터
	- CHAR : 고정길이 문자
		CHAR(용량)
		정해진 크기보다 작은 문자가 저장될 경우 남은 공간을 공백으로 채운다
		CHAR(5)에 'A' 	A^^^^ 빈자리가 공백으로 채워진다
		문자의 수가 변하지 않는 값에 사용
	- VARCHAR2 : 가변길이 문자
		VARCHAR2(용량)
		문자의 수만큼 공간이 배정되어 남은 공간을 공백으로 채우지 않는다
		문자의 수에 변화가 있는 값에 사용

2. 숫자 데이터
	- NUMBER
		NUMBER(precision) : 정수
		NUMBER(precision, scale) : 실수
		precision : 정밀도(최대 유효숫자 자리수), scale : 소수점 기준 자리수
		precision 이상의 값이 들어올 경우 오류 발생,  
		s가 양수면 소수점 이하, 음수 소수점 이상 자리수
		s 범위 밖의 값은 반올림되어 적용된다
	ex) 실수 데이터, s가 양수인경우
		NUMBER(5, 2)	=> 소수점 이하 2자리까지의 값을 저장가능
			123.34, 35.43
	    실수 데이터, s가 음수인경우
		NUMBER(5, -2) 	=> 정수부분에 2자리까지의 값을 저장 가능
			12, 123, 1200
	    s범위 밖의 값
		NUMBER(5, 2)
			123.453 => 반올림, 123.45
			123.456 => 반올림, 123.46

3. 날짜 데이터
	- DATE : 날짜와 시간, 형식(format)에 맞추어 값을 테이블에 저장하여 사용
	- TIMESTAMP : 소수 초까지 정확한 날짜/시간 값을 저장하는  경우
	
4. 대용량 데이터
	- BLOB(Binary Large Object) : 바이너리 대형 객체(이미지, 오디오, 비디오)
		이진 파일을 다룰 때 사용
	- CLOB(Character Large Object) : 문자 대형 객체(큰 문자열이나 문서)
		최대 4GB 문자열 저장 가능
		LONG 타입을 개선한 데이터 타입

연산자
	연산자 피연산자 자리에 어떤 타입의 값이 오는지,
	연산자 어떻게 동작하는지,
	연산의 결과가 어떤 타입의 값인지 아는 것이 중요하다

1. 연결연산자
	a || b (concatenation, 연쇄) : a와 b를 연결해준다
	숫자, 날짜, 문자 타입이 피연산자로 올 수 있으며
	앞에 있는 값과 뒤에 있는 값을 연결한다
	연결의 결과는 문자타입이다

2. 산술연산자
	+, -, *, /	
	피연산자에 숫자타입을 사용한다
	각각 덧셈, 뺄셈, 곱셈, 나눗셈을 연산한다
	연산의 결과는 숫자타입이다

	+, -는 날짜타입에서도 가능하다
	날짜와 숫자타입 간의 +, - 연산의 결과는 날짜타입이다
	날짜와 날짜타입 간의 +, - 연산의 결과는 숫자타입이다


3. 관계연산자
4. SQL연산자
5. 논리연산자
6. 단항연산자	양수(+), 음수(-)
















